{"version":3,"sources":["img/defaultProfilePicture.png","components/LogIn.js","components/CreateAccount.js","utils/localStorageUtils.js","components/SideNav.js","components/Note.js","components/NoteObj.js","components/Overview.js","components/Dashboard.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LogIn","checkLogin","isAuthorized","isEmailWrong","isPasswordWrong","useState","email","setEmail","password","setPassword","isInputFilled","setIsInputFilled","handleButtonClick","useCallback","e","preventDefault","useEffect","to","id","htmlFor","type","name","value","onChange","newEmail","target","className","newPassword","onClick","CreateAccount","checkCreateAccount","isEmailUnvalid","isAccountValid","arePasswordsDifferent","setName","confirmPassword","setConfirmPassword","newName","newConfirmPassword","DEFAULT_STATE","setLocalState","localStateObj","localStorage","setItem","JSON","stringify","getLocalState","localVal","getItem","parse","console","error","setPartialLocalState","partialLocalStateObj","getAllUsers","getAllNotes","_generateNewId","idArr","uuid","generateNewNoteId","map","getUserByEmail","inputEmail","find","getAllNotesForUser","userObj","filter","userId","SideNav","user","fetchLatestNotes","notes","newNoteMenuOpen","setNewNoteMenuOpen","closeNewNoteMenu","setNoteName","noteName","noteTitle","noteContent","folder","newNote","title","content","lastModified","Date","toLocaleDateString","insertNewNoteForUser","src","defaultProfilePic","alt","icon","style","display","newNoteName","Note","note","setNoteContent","updateNote","updatedNote","newNotes","existingNote","updateNoteForUser","newNoteContent","NoteObj","setNote","log","deletedNote","deleteNoteForUser","Overview","l_note","index","key","Dashboard","setNotes","Router","setUser","setIsAuthorized","setIsEmailWrong","setIsPasswordWrong","setIsAccountValid","setIsEmailUnvalid","setArePasswordsDifferent","existingUser","bcrypt","compareSync","password_encrypted","isUserPasswordCorrect","newUser","hashSync","metadata","insertNewUser","path","library","add","faPlusSquare","faCaretRight","faFileAlt","faStar","faFolder","faUserFriends","faBriefcase","faChalkboardTeacher","faUser","faTrash","faCog","faBars","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3f814435.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultProfilePicture.0d5a23fc.png\";","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Redirect, NavLink } from 'react-router-dom'\r\nimport '../style/style-login.css'\r\n\r\nconst LogIn = ({\r\n  checkLogin,\r\n  isAuthorized,\r\n  isEmailWrong,\r\n  isPasswordWrong\r\n}) => {\r\n\r\n  // now that we have the checkLogin function, the email and password states can live here\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [isInputFilled, setIsInputFilled] = useState(false)\r\n\r\n  const handleEmailChange = (e) => {\r\n    const newEmail = e.target.value;\r\n\r\n    setEmail(newEmail);\r\n  }\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n\r\n    setPassword(newPassword);\r\n  }\r\n\r\n  // useCallback creates a special React function that keeps itself from being redefined inside the component more than needed\r\n  // It updates its interval values only if email, password, isInputFilled, or checkLogin change, its only \"dependencies\"\r\n  // It works like a normal function, just not one that has to be completely redefined everytime LogIn re-renders\r\n  const handleButtonClick = useCallback((e) => {\r\n    e.preventDefault();\r\n    if(isInputFilled){\r\n      checkLogin(email, password)\r\n    }\r\n  }, [email, password, isInputFilled, checkLogin])\r\n\r\n  // useEffect looks like useCallback, but instead of a creating a function for you to call,\r\n  // it runs the function inside automatically any time one of its \"dependencies\" changes.\r\n  // The \"dependencies\" are [email, password, setIsInputFilled],\r\n  // so anytime the user changes the email or password, it evaluates whether either is empty\r\n  useEffect(() => {\r\n    if(email === \"\" || password === \"\"){\r\n      setIsInputFilled(false)\r\n    } else {\r\n      setIsInputFilled(true)\r\n    }\r\n  }, [email, password, setIsInputFilled])\r\n\r\n  // This prop will come in true if the checkLogin function calls setIsAuthroized(true) in Router\r\n  if(isAuthorized){\r\n    return <Redirect to=\"/dash\"/>\r\n  }\r\n\r\n  return(\r\n    <div id=\"login-container\">\r\n      <div id=\"login-form\">\r\n        <h2>Log In</h2>\r\n        <h4>Sign into your account to continue</h4>\r\n\r\n        {/* <div className=\"form-section\" id='email-container'>\r\n          <h5>Email Address</h5>\r\n          <div className=\"input-field\" id='email-field'></div>\r\n        </div>\r\n\r\n        <div className=\"form-section\" id='password-container'>\r\n          <h5>Password</h5>\r\n          <div className=\"input-field\" id='password-field'></div>\r\n        </div>\r\n\r\n        <div id=\"signin\"><h3>Sign In</h3></div> */}\r\n\r\n        <form>\r\n          <label htmlFor=\"mail\">Email Address</label>\r\n          <input type=\"email\" id=\"mail\" name=\"user_email\" value={email} onChange={handleEmailChange}/>\r\n          {/* Pattern for only rendering some JSX whenever a condition is true: */}\r\n          {isEmailWrong && <div className=\"login-error-mess\">Email not found</div>}\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" name=\"user_password\" value={password} onChange={handlePasswordChange}/>\r\n          {isPasswordWrong && <div className=\"login-error-mess\">Invalid password</div>}\r\n\r\n          <button \r\n            type=\"submit\" \r\n            onClick={handleButtonClick}\r\n            className={!isInputFilled ? \"disabled button_form\" : \"button_form\"}\r\n          >\r\n            Sign In\r\n          </button>\r\n        </form>\r\n\r\n        <h5 id=\"createAccount-text\">Not Registered? <span><NavLink to=\"/create-account\" className=\"create-account-link\">Create Account</NavLink></span></h5>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LogIn;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Redirect, NavLink } from 'react-router-dom'\r\nimport '../style/style-create-account.css'\r\n\r\nconst CreateAccount = ({\r\n  checkCreateAccount,\r\n  isAccountValid,\r\n  isEmailUnvalid,\r\n  arePasswordsDifferent,\r\n  isAuthorized\r\n}) => {\r\n\r\n  // now that we have the checkCreateAccount function, the email and password states can live here\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n  const [isInputFilled, setIsInputFilled] = useState(false)\r\n\r\n  // const [user, setUser] = useState(\"\")\r\n\r\n  const handleNameChange = (e) => {\r\n    const newName = e.target.value;\r\n\r\n    setName(newName);\r\n  }\r\n\r\n  const handleEmailChange = (e) => {\r\n    const newEmail = e.target.value;\r\n\r\n    setEmail(newEmail);\r\n  }\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n\r\n    setPassword(newPassword);\r\n  }\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    const newConfirmPassword = e.target.value;\r\n\r\n    setConfirmPassword(newConfirmPassword);\r\n  }\r\n\r\n  const handleButtonClick = useCallback((e) => {\r\n    e.preventDefault();\r\n    if(isInputFilled){\r\n      checkCreateAccount(name, email, password, confirmPassword);\r\n    }\r\n  }, [name, email, password, confirmPassword, isInputFilled, checkCreateAccount])\r\n\r\n  useEffect(() => {\r\n    if(name === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\"){\r\n      setIsInputFilled(false)\r\n    } else {\r\n      setIsInputFilled(true)\r\n    }\r\n  }, [name, email, password, confirmPassword, setIsInputFilled])\r\n\r\n  if(isAccountValid){\r\n    // console.log(\"Account Created\")\r\n    // Note: this is now handled in checkCreateAccount()\r\n    // Create a new entry in the database.json file/local storage, stored in server/database \r\n    // Hash password\r\n    // Authenticate user and redirect to dashboard with return <Redirect to=\"/dash\"/>\r\n  }\r\n\r\n  if(isAuthorized){\r\n    return <Redirect to=\"/dash\"/>\r\n  }\r\n\r\n  return(\r\n    <div id=\"create-account-container\">\r\n      <div id=\"create-account-form\">\r\n        <h2>Create Account</h2>\r\n        <h4>Create an Account to continue</h4>\r\n        \r\n        <form>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input type=\"text\" id=\"name\" name=\"user_name\" value={name} onChange={handleNameChange}/>\r\n\r\n          <label htmlFor=\"mail\">Email Address</label>\r\n          <input type=\"email\" id=\"mail\" name=\"user_email\" value={email} onChange={handleEmailChange}/>\r\n          {(isEmailUnvalid) && <div className=\"login-error-mess\">Email is not Valid</div>}\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" name=\"user_password\" value={password} onChange={handlePasswordChange}/>\r\n\r\n          <label htmlFor=\"confirm-password\">Confirm Password</label>\r\n          <input type=\"password\" id=\"confirm-password\" name=\"confirm-user_password\" value={confirmPassword} onChange={handleConfirmPasswordChange}/>\r\n          {(arePasswordsDifferent) && <div className=\"login-error-mess\">Passwords Don't Match</div>}\r\n\r\n          <button \r\n            type=\"submit\"\r\n            onClick={handleButtonClick}\r\n            className={!isInputFilled ? \"disabled button_form\" : \"button_form\"}>\r\n            Create Account\r\n          </button>\r\n          <h5 id=\"return-to-login-text\">Registered? <span><NavLink to=\"/login\" className=\"create-account-link\">Login</NavLink></span></h5>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateAccount;","/*\r\nHOW TO USE THIS MODULE:\r\n\r\n//////Example Code of all exported functions////////\r\n\r\nimport { \r\n  getUserByEmail,\r\n  isUserPasswordCorrect,\r\n  insertNewUser,\r\n  getAllNotesForUser,\r\n  insertNewNoteForUser,\r\n  updateNoteForUser\r\n} from './localStorageUtils'\r\n\r\nconst existingUserObj = getUserByEmail(someEmailAddress) // same result as function in db_utils.js\r\nconst passwordIsCorrect = isUserPasswordCorrect(somePassword) // same as function in db_utils.js\r\nconst newUserObj = insertNewUser(newUserName, newUserEmail, newUserPassword) // save user in localStorage and returns new userObj\r\nconst freshArrayOfNoteObjects = getAllNotesForUser(someUserObj) // Now you should get notes by using this function.  You can call it in a component to always get the latest notes from localStorage\r\ninsertNewNoteForUser(currentUserObj, noteTitle, noteContent, folder = \"\") // last \"folder\" argument is optional to include. Note date is handled inside function\r\n\r\n//////////////////////////////////////////////\r\n\r\nGENERAL NOTES:\r\n\r\nNotes are now separate from users, and they will have a new \"userId\" field in each object to link to a user (\"foreign key\").\r\nThis will be helpful, as it is closer to how data is actually stored in a database, and it means that it will\r\nbe easier to get the update notes for a user, as this list changes during the use of the application.\r\n\r\nYou don't actually have to directly set or use IDs for users or notes directly.  It's handled already within the functions described above.\r\n\r\n//////////////////////////////////////////////\r\n*/\r\n\r\nimport bcrypt from 'bcryptjs'\r\nimport {v4 as uuid} from 'uuid'\r\n\r\n// It's best to save re-used strings as constants\r\n// Using repeated plain strings in multiple places is called \"using magic strings\", which you should avoid.\r\n// This reduces typos and clarifies a string's use.\r\nconst LOCAL_STORAGE_STATE_KEY = \"state\"\r\nconst STATE_USERS_KEY = \"users\"\r\nconst STATE_NOTES_KEY = \"notes\"\r\n\r\n// This state will \"fix\" a missing or broken localStorage state\r\n// It will always be missing the first time you visit the site, or when opening from a private browsing window.\r\n// It's not necessary to use constants for keys below.  This just reduces typos for now.\r\n// React and Angular developers prefer the JS language extension TypeScript to handle keeping consistent objects\r\nconst DEFAULT_STATE = {\r\n  [STATE_USERS_KEY]: [],\r\n  [STATE_NOTES_KEY]: []\r\n}\r\n\r\n/*////////////////////////////////////////\r\n           Internal Utilities\r\n////////////////////////////////////////*/\r\n// The following functions will not be exported, but used for more specific \"database-like\" functions below\r\n// Think of them like replacements for the ability to perform basic database operations\r\nconst setLocalState = (localStateObj) => {\r\n  // You can only store a string key to a string value in localStorage, but you can save an object as a JSON string and parse it later (see below)\r\n  localStorage.setItem(LOCAL_STORAGE_STATE_KEY, JSON.stringify(localStateObj))\r\n}\r\n\r\nconst getLocalState = () => {\r\n  const localVal = localStorage.getItem(LOCAL_STORAGE_STATE_KEY)\r\n\r\n  if(localVal){\r\n    try {\r\n      return JSON.parse(localVal)\r\n    } catch(e){\r\n      console.error(`Could not parse localStorage state at key \"${LOCAL_STORAGE_STATE_KEY}\". Received \"${localVal}\". Error: ${e}`)\r\n    }\r\n  }\r\n\r\n  // If function makes it to this point, there was no value present, or there was an error in parsing it\r\n  setLocalState(DEFAULT_STATE)\r\n  return DEFAULT_STATE\r\n}\r\n\r\nconst setPartialLocalState = (partialLocalStateObj) => {\r\n  // This \"merges\" two objects, with the latter overriding values of the former\r\n  setLocalState({ ...getLocalState(), ...partialLocalStateObj })\r\n}\r\n\r\nconst getAllUsers = () => getLocalState()[STATE_USERS_KEY]\r\n\r\nconst getAllNotes = () => getLocalState()[STATE_NOTES_KEY]\r\n\r\nconst _generateNewId = (idArr) => {\r\n  return uuid()\r\n  // if(idArr.length > 0){\r\n  //   // return Math.max(...idArr) + 1\r\n  // }\r\n  // return 1\r\n}\r\n\r\nconst generateNewUserId = () => {\r\n  return _generateNewId(getAllUsers().map(({ id }) => id))\r\n}\r\n\r\nconst generateNewNoteId = () => {\r\n  return _generateNewId(getAllNotes().map(({ id }) => id))\r\n}\r\n\r\n/*////////////////////////////////////////\r\n           Exported Utilities\r\n////////////////////////////////////////*/\r\n// These more specific utilities will provide you with some actions you can use in your application\r\n\r\nexport const getUserByEmail = (inputEmail) => getAllUsers().find(({ email }) => inputEmail === email)\r\n\r\nexport const isUserPasswordCorrect = (user, password) => bcrypt.compareSync(password, user.password_encrypted)\r\n\r\nexport const insertNewUser = (name, email, password) => {\r\n\r\n  const newUser = {\r\n    id: generateNewUserId(),\r\n    name: name,\r\n    email: email,\r\n    password_encrypted: bcrypt.hashSync(password, 10),\r\n    metadata: {}\r\n  }\r\n\r\n  // spread syntax works for Arrays.  This creates a new array with the old users copied and the new user at the end\r\n  setPartialLocalState({ [STATE_USERS_KEY]: [...getAllUsers(), newUser] })\r\n\r\n  // You can use the new user right away\r\n  return newUser\r\n}\r\n\r\n// Notes should now have a userId field\r\n// Now you can pull back an up-to-date notes list for any user, without saving them into the user object directly\r\nexport const getAllNotesForUser = (userObj) => {\r\n  return getAllNotes().filter(({ userId }) => userId === userObj.id)\r\n}\r\n\r\n// folder defaults to \"\" for now\r\nexport const insertNewNoteForUser = (userObj, noteTitle, noteContent, folder = \"\") => {\r\n\r\n  const newNote = {\r\n    id: generateNewNoteId(),\r\n    userId: userObj.id, // a \"foreign key\" to the user, allowing it to be grabbed for that user only later\r\n    title: noteTitle,\r\n    content: noteContent,\r\n    folder: folder,\r\n    lastModified: new Date().toLocaleDateString()\r\n  }\r\n\r\n  setPartialLocalState({ [STATE_NOTES_KEY]: [...getAllNotes(), newNote] })\r\n}\r\n\r\nexport const updateNoteForUser = (updatedNote) => {\r\n\r\n  const newNotes = getAllNotes().map(existingNote => {\r\n    if(existingNote.id === updatedNote.id){\r\n      return updatedNote\r\n    }\r\n    return existingNote\r\n  })\r\n\r\n  setPartialLocalState({ [STATE_NOTES_KEY]: newNotes })\r\n}\r\n\r\nexport const deleteNoteForUser = (deletedNote) => {\r\n\r\n  const newNotes = getAllNotes().filter(existingNote => existingNote.id !== deletedNote.id)\r\n\r\n  setPartialLocalState({ [STATE_NOTES_KEY]: newNotes })\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport defaultProfilePic from '../img/defaultProfilePicture.png'\r\nimport { \r\n  insertNewNoteForUser\r\n} from '../utils/localStorageUtils'\r\n\r\nconst SideNav = ( { user, notes, fetchLatestNotes } ) => {\r\n\r\n  const [newNoteMenuOpen, setNewNoteMenuOpen] = useState(false)\r\n\r\n  const openNewNoteMenu = () => {\r\n    setNewNoteMenuOpen(true)\r\n  }\r\n  const closeNewNoteMenu = () => {\r\n    setNoteName(\"\")\r\n    setNewNoteMenuOpen(false)\r\n  }\r\n\r\n  const [noteName, setNoteName] = useState(\"\")\r\n  const [isInputFilled, setIsInputFilled] = useState(false)\r\n\r\n  const handleNoteNameChange = (e) => {\r\n    const newNoteName = e.target.value\r\n\r\n    setNoteName(newNoteName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(noteName === \"\"){\r\n      setIsInputFilled(false)\r\n    } else {\r\n      setIsInputFilled(true)\r\n    }\r\n  }, [noteName, setIsInputFilled])\r\n\r\n  const handleButtonClick = useCallback((e) => {\r\n    e.preventDefault();\r\n    if(isInputFilled){\r\n      insertNewNoteForUser(user, noteName, \"\")\r\n      fetchLatestNotes()\r\n      closeNewNoteMenu()\r\n    }\r\n  }, [user, noteName, fetchLatestNotes, isInputFilled])\r\n  \r\n  return(\r\n    <aside className=\"sidenav\">\r\n      <div className=\"user\">\r\n        <img src={defaultProfilePic} alt=\"Portrait of me\" />\r\n        <div className=\"user-text\">\r\n          <span id=\"name\">{user.name}</span>\r\n          <span id=\"email\">{user.email}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"QuickAccess\">\r\n        {/* <!-- <h2 id=\"AllNotes\"><i className=\"fas fa-sticky-note\"></i>All Notes</h2>\r\n        <h2 id=\"Important\"><i className=\"fas fa-star\"></i>Important</h2>\r\n        <h2 id=\"Folders\"><i className=\"fas fa-folder\"></i>Folders</h2> -->\r\n        <!-- <ul className=\"QuickAccess_list fa-ul\">\r\n          <li><span className=\"fa-li\"><i className=\"fas fa-sticky-note\"></i></span>All Notes</li>\r\n          <li><span className=\"fa-li\"><i className=\"fas fa-star\"></i></span>Important</li>\r\n          <li><span className=\"fa-li\"><i className=\"fas fa-folder\"></i></span>Folders</li>\r\n          <li><span className=\"fa-li\"><i className=\"far fa-square\"></i></span>Shared with Me</li>\r\n        </ul> --> */}\r\n\r\n        <h1 id=\"NewNote\" onClick={openNewNoteMenu}><span><FontAwesomeIcon id=\"NewNoteIcon\" icon={['fas', 'plus-square']} className=\"sidenav-icon\"/>New Note</span></h1>\r\n\r\n        <ul className=\"QuickAccess_list fa-ul\">\r\n          <li><span className=\"fa-li\"><i className=\"\"></i></span><FontAwesomeIcon icon={['fas', 'file-alt']} className=\"sidenav-icon\"/>All Notes</li>\r\n          <li><span className=\"fa-li\"><FontAwesomeIcon icon={['fas', 'caret-right']} className=\"sidenav-icon\"/></span><FontAwesomeIcon icon={['fas', 'star']} className=\"sidenav-icon\"/>Important</li>\r\n          <li><span className=\"fa-li\"><FontAwesomeIcon icon={['fas', 'caret-right']} className=\"sidenav-icon\"/></span><FontAwesomeIcon icon={['fas', 'folder']} className=\"sidenav-icon\"/>Folders</li>\r\n          <li><span className=\"fa-li\"><FontAwesomeIcon icon={['fas', 'caret-right']} className=\"sidenav-icon\"/></span><FontAwesomeIcon icon={['fas', 'user-friends']} className=\"sidenav-icon\"/>Shared with Me</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"Workspaces\">\r\n        <h2>Workspaces</h2>\r\n        <ul className=\"Workspaces_list fa-ul\">\r\n          <li><span className=\"fa-li\"><i className=\"\"></i></span><FontAwesomeIcon icon={['fas', 'briefcase']} className=\"sidenav-icon\"/>Work</li>\r\n          <li><span className=\"fa-li\"><i className=\"\"></i></span><FontAwesomeIcon icon={['fas', 'chalkboard-teacher']} className=\"sidenav-icon\"/>School</li>\r\n          <li><span className=\"fa-li\"><i className=\"\"></i></span><FontAwesomeIcon icon={['fas', 'user']} className=\"sidenav-icon\"/>Personal</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"Misc\">\r\n        <ul className=\"Misc_list fa-ul\">\r\n          <li><FontAwesomeIcon icon={['fas', 'trash']} className=\"sidenav-icon\"/>Trash</li>\r\n          <li><FontAwesomeIcon icon={['fas', 'cog']} className=\"sidenav-icon\"/>Settings</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"modal\" id=\"newNoteModal\" style={newNoteMenuOpen ? {display: \"flex\"} : {display: \"none\"}}>\r\n        <div className=\"modal-content\">\r\n          <h1>New Note Setup</h1>\r\n\r\n          <form className=\"newNoteForm\">\r\n            <label htmlFor=\"noteName\">Note Name</label>\r\n            <input type=\"text\" id=\"noteName\" name=\"noteName\" value={noteName} onChange={handleNoteNameChange}/>\r\n\r\n            <button \r\n              type=\"submit\"\r\n              onClick={handleButtonClick}\r\n              className={!isInputFilled ? \"disabled button_form\" : \"button_form\"}>\r\n              Create Note\r\n            </button>\r\n            <button \r\n              type=\"button\"\r\n              onClick={closeNewNoteMenu}\r\n              id=\"cancelNewNote\"\r\n              className={\"button_form\"}>\r\n              Cancel\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n    </aside>\r\n  )\r\n\r\n}\r\n\r\nexport default SideNav;","import React, { useEffect, useState, useCallback } from 'react';\r\n\r\nimport { \r\n  updateNoteForUser\r\n} from '../utils/localStorageUtils'\r\n\r\nconst Note = ( {user, note, fetchLatestNotes } ) => {\r\n\r\n  const [noteContent, setNoteContent] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    note !== null && setNoteContent(note.content)\r\n  }, [note])\r\n\r\n  const handleNoteContentChange = (e) => {\r\n    const newNoteContent = e.target.value\r\n    setNoteContent(newNoteContent)\r\n  }\r\n\r\n  const updateNote = useCallback((e) => {\r\n    e.preventDefault();\r\n    updateNoteForUser({ ...note, content: noteContent })\r\n    fetchLatestNotes()\r\n  }, [note, noteContent, fetchLatestNotes])\r\n\r\n  return(\r\n    <div className=\"Note\">\r\n      <h2>{(note !== null) ? note.title : \"\"}</h2>\r\n      {(note !== null) ? <textarea value={noteContent} onChange={handleNoteContentChange}></textarea> : \"\"}\r\n      {(note !== null) ? <button type=\"submit\" onClick={updateNote} className=\"button_form\">Submit</button> : \"\"}\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default Note;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  deleteNoteForUser\r\n} from '../utils/localStorageUtils'\r\n\r\nconst NoteObj = ({ note, setNote, fetchLatestNotes }) => {\r\n\r\n  const selectNote = () => {\r\n    setNote(note)\r\n    console.log(note.id + \" - Note Selected\")\r\n  }\r\n\r\n  const deleteNote = () => {\r\n    deleteNoteForUser({ ...note })\r\n    setNote(null)\r\n    fetchLatestNotes()\r\n    console.log(note.id + \" - Info Pressed\")\r\n  }\r\n\r\n  return(\r\n    <div className=\"NoteObj-container\">\r\n      <div className=\"NoteObj\" onClick={selectNote}>\r\n        <h2>{note.title}</h2>\r\n        <p>{note.content}</p>\r\n        <h6>{note.lastModified}</h6>\r\n      </div>\r\n      <div className=\"NoteObjInfo\" onClick={deleteNote}>\r\n        <FontAwesomeIcon icon={['fas', 'trash']} className=\"sidenav-icon\"/>\r\n        {/* <span>•</span>\r\n        <span>•</span>\r\n        <span>•</span> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteObj;\r\n\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport NoteObj from './NoteObj'\r\n\r\nconst Overview = ( { user, notes, note, setNote, fetchLatestNotes } ) => {\r\n\r\n  return(\r\n    <div className=\"Overview\">\r\n\r\n      <div className=\"selected\">\r\n        <div className=\"menu-icon active\"><FontAwesomeIcon icon={['fas', 'bars']} /></div>\r\n        <h2>All Notes</h2>\r\n      </div>\r\n\r\n      {notes.map((l_note, index) => {\r\n        return <NoteObj key={`note-object-${index}`} note={l_note} setNote={setNote} fetchLatestNotes={fetchLatestNotes}/>\r\n        // console.log(`note-object-${index}`)\r\n      })}\r\n\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default Overview;","import React, { useState } from 'react';\r\nimport SideNav from './SideNav';\r\nimport Note from './Note';\r\nimport Overview from './Overview';\r\n// import '../manage';\r\nimport '../style/style-dashboard.css';\r\nimport { getAllNotesForUser } from '../utils/localStorageUtils';\r\n\r\nconst Dashboard = ( { user } ) => {\r\n\r\n  const [notes, setNotes] = useState(getAllNotesForUser(user))\r\n  const [note, setNote] = useState(null)\r\n\r\n  const fetchLatestNotes = () => setNotes(getAllNotesForUser(user))\r\n\r\n  // Removed <body> since there is already a body in the root HTML document\r\n  return(\r\n    <>\r\n      <SideNav className='sidenav' user={user} notes={notes} fetchLatestNotes={fetchLatestNotes}/>\r\n      <div className='grid-container'>\r\n        <Overview className='Overview' user={user} notes={notes} note={note} setNote={setNote} fetchLatestNotes={fetchLatestNotes}/>\r\n        <Note className='Note' user={user} note={note} fetchLatestNotes={fetchLatestNotes}/>\r\n      </div>\r\n    </>\r\n  )\r\n  \r\n}\r\n\r\nexport default Dashboard;","import React, { useState, useCallback } from 'react';\r\nimport { Switch, Route, Redirect } from \"react-router\";\r\nimport LogIn from './components/LogIn';\r\nimport CreateAccount from './components/CreateAccount'\r\nimport Dashboard from './components/Dashboard';\r\n\r\n// import { getUserByEmail, isUserPasswordCorrect } from './database/db_utils'\r\n\r\nimport { \r\n  getUserByEmail,\r\n  isUserPasswordCorrect,\r\n  insertNewUser\r\n} from './utils/localStorageUtils'\r\n\r\n\r\nconst Router = () => {\r\n\r\n  // user will be replaced by user object from db in the checkLogin function below\r\n  // Using the entire user object as a value for your components means you don't need to look up database info very often\r\n  const [user, setUser] = useState(null)\r\n  const [isAuthorized, setIsAuthorized] = useState(false)\r\n  const [isEmailWrong, setIsEmailWrong] = useState(false)\r\n  const [isPasswordWrong, setIsPasswordWrong] = useState(false)\r\n\r\n  const [isAccountValid, setIsAccountValid] = useState(false)\r\n  const [isEmailUnvalid, setIsEmailUnvalid] = useState(false)\r\n  const [arePasswordsDifferent, setArePasswordsDifferent] = useState(false)\r\n\r\n  // useCallback creates a function that you can use normally,\r\n  // but it is optimized for when you want to define a function inside a React component using state values/setters\r\n  // There is another example with more explanation in the Login component\r\n  const checkLogin = useCallback((email, password) => {\r\n    // If they are re-attempting login, just clear these login errors:\r\n    setIsEmailWrong(false)\r\n    setIsPasswordWrong(false)\r\n\r\n    const existingUser = getUserByEmail(email)\r\n\r\n    // getUserByEmail returns undefined if no user was found\r\n    if(!existingUser){\r\n      setIsEmailWrong(true)\r\n      return\r\n    }\r\n\r\n    // this is where the bycrpt comparison happens\r\n    if(!isUserPasswordCorrect(existingUser, password)){\r\n      setIsPasswordWrong(true)\r\n      return\r\n    }\r\n\r\n    // function only gets to this point if user exists and password is correct\r\n    setIsAuthorized(true)\r\n    setUser(existingUser)\r\n  }, [setIsEmailWrong, setIsPasswordWrong, setIsAuthorized, setUser])\r\n\r\n  const checkCreateAccount = useCallback((name, email, password, confirmPassword) => {\r\n    // Prevent Errors upon restart of the form\r\n    setIsEmailUnvalid(false)\r\n    setArePasswordsDifferent(false)\r\n\r\n    const existingUser = getUserByEmail(email)\r\n\r\n    // getUserByEmail returns undefined if no user was found\r\n    if(existingUser){\r\n      setIsEmailUnvalid(true)\r\n      return\r\n    }\r\n\r\n    // Checks is both passwords are different otherwise return which cancels action\r\n    if(password !== confirmPassword){\r\n      setArePasswordsDifferent(true)\r\n      return\r\n    }\r\n\r\n    // function only gets to this point if the user doesn't exist and the passwords match\r\n    setIsAccountValid(true)\r\n    setUser(insertNewUser(name, email, password))\r\n    setIsAuthorized(true)\r\n    // console.log(\"Account Valid\")\r\n\r\n  }, [setIsEmailUnvalid, setArePasswordsDifferent, setIsAccountValid])\r\n\r\n  return(\r\n    <Switch>\r\n      <Route path=\"/login\">\r\n        <LogIn \r\n          checkLogin={checkLogin}\r\n          isAuthorized={isAuthorized}\r\n          isEmailWrong={isEmailWrong}\r\n          isPasswordWrong={isPasswordWrong}\r\n        />\r\n      </Route>\r\n      <Route path=\"/create-account\">\r\n        <CreateAccount\r\n          checkCreateAccount={checkCreateAccount}\r\n          isAccountValid={isAccountValid}\r\n          isEmailUnvalid={isEmailUnvalid}\r\n          arePasswordsDifferent={arePasswordsDifferent}\r\n          isAuthorized={isAuthorized}\r\n        />\r\n      </Route>\r\n      {!isAuthorized && <Redirect to=\"/login\"/>}\r\n      <Route path=\"/dash\">\r\n        <Dashboard user={user}/>\r\n      </Route>\r\n      <Redirect path=\"*\" to=\"/login\"/>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Router;","import React from 'react';\r\nimport Router from './Router'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { \r\n  faPlusSquare, faCaretRight, faFileAlt, faStar, faFolder, \r\n  faUserFriends, faBriefcase, faChalkboardTeacher, faUser, faTrash, faCog,\r\n  faBars \r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n  faPlusSquare, faCaretRight, faFileAlt, faStar, faFolder, \r\n  faUserFriends, faBriefcase, faChalkboardTeacher, faUser, faTrash, faCog, \r\n  faBars\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Router />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}